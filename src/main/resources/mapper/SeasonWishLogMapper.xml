<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencent.wxcloudrun.dao.SeasonWishLogMapper">
    <resultMap id="seasonWishLogResultMap" type="com.tencent.wxcloudrun.model.SeasonWishLog">
        <id column="id" property="id"/>
        <result column="seasonId" property="seasonId"/>
        <result column="mid" property="mid"/>
        <result column="uid" property="uid"/>
        <result column="wid" property="wid"/>
        <result column="point" property="point"/>
        <result column="info" property="info"/>
        <result column="status" property="status"/>
        <result column="amount" property="amount"/>
        <result column="unitType" property="unitType"/>
        <result column="endTime" property="endTime"/>
        <result column="unit" property="unit"/>
        <result column="createdAt" property="createdAt"/>
        <result column="updatedAt" property="updatedAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, seasonId, mid, uid, wid, point, info, status, amount, unitType, endTime, unit, createdAt, updatedAt
    </sql>

    <select id="getById" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE id = #{id}
    </select>

    <select id="getByIdAndSeasonId" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE id = #{id} AND seasonId = #{seasonId}
    </select>

    <select id="getBySeasonIdAndMid" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid}
        ORDER BY createdAt DESC
    </select>

    <select id="getBySeasonIdAndWid" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND wid = #{wid}
        ORDER BY createdAt DESC
    </select>

    <select id="getBySeasonIdAndMidAndWid" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid} AND wid = #{wid}
        ORDER BY createdAt DESC
    </select>
    
    <select id="getCountBySeasonIdAndMidAndStatus" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid}
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>
    
    <select id="getBySeasonIdAndMidWithPage" resultType="java.util.HashMap">
        SELECT
            t1.id, t1.seasonId as seasonId,t1.wid,t1.point,t1.status,t2.img,t2.title,t2.content,t2.needPoint,t2.unit,t2.unitType,
            date_format(t1.createdAt, '%Y-%m-%d %H:%i:%s') as updatedAt,t1.amount
        FROM season_wish_logs t1
        LEFT JOIN season_wishes t2 ON t1.wid = t2.id
        WHERE t1.seasonId = #{seasonId} AND t1.mid = #{mid}
        <if test="status != null">
            AND t1.status = #{status}
        </if>
        ORDER BY t1.createdAt DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getTotalPointsBySeasonIdAndMid" resultType="java.lang.Integer">
        SELECT SUM(point)
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid}
    </select>

    <select id="getBySeasonIdAndMidAndStatus" resultMap="seasonWishLogResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid} AND status = #{status}
        ORDER BY createdAt DESC
    </select>

    <insert id="insert" parameterType="com.tencent.wxcloudrun.model.SeasonWishLog" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO season_wish_logs (
            seasonId, mid, uid, wid, point, info, status, amount, unitType, endTime, unit, createdAt, updatedAt
        ) 
        VALUES (
            #{seasonId}, #{mid}, #{uid}, #{wid}, #{point}, #{info}, #{status}, 
            #{amount}, #{unitType}, #{endTime}, #{unit}, now(), now()
        )
    </insert>

    <update id="update" parameterType="com.tencent.wxcloudrun.model.SeasonWishLog">
        UPDATE season_wish_logs
        <set>
            <if test="point != null">point = #{point},</if>
            <if test="info != null">info = #{info},</if>
            <if test="status != null">status = #{status},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="unitType != null">unitType = #{unitType},</if>
            <if test="endTime != null">endTime = #{endTime},</if>
            <if test="unit != null">unit = #{unit},</if>
            updatedAt = now()
        </set>
        WHERE id = #{id}
        AND seasonId = #{seasonId}
    </update>

    <update id="updateStatus">
        UPDATE season_wish_logs
        SET status = #{status}, updatedAt = now()
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM season_wish_logs
        WHERE id = #{id}
    </delete>

    <delete id="deleteByIdAndSeasonId">
        DELETE FROM season_wish_logs
        WHERE id = #{id} AND seasonId = #{seasonId}
    </delete>

    <!-- 根据赛季ID删除所有愿望日志 -->
    <delete id="deleteBySeasonId">
        DELETE FROM season_wish_logs
        WHERE seasonId = #{seasonId}
    </delete>

    <!-- 赛季统计：心愿兑换排行（假设wid为愿望ID，status=1为已兑换） -->
    <select id="getTopWishesByDateRange" resultType="java.util.Map">
        SELECT wid AS name, COUNT(*) AS count
        FROM season_wish_logs
        WHERE seasonId = #{seasonId}
          AND mid = #{mid}
          AND status = 1
          AND createdAt BETWEEN #{startDate} AND #{endDate}
        GROUP BY wid
        ORDER BY count DESC
        LIMIT #{limit}
    </select>

    <select id="getSumNumBySeasonIdAndMid" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(point),0)
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} AND mid = #{mid} AND status != -1
    </select>
    
    <select id="countUserExchanges" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM season_wish_logs
        WHERE wid = #{id} and seasonId = #{seasonId}
        AND createdAt  <![CDATA[ >= ]]> #{startTime}
    </select>

    <!-- 获取赛季模式下指定时间范围内的心愿消费积分总数 -->
    <select id="getConsumedPointsByDateRange" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(point), 0)
        FROM season_wish_logs
        WHERE seasonId = #{seasonId} 
        AND mid = #{mid} 
        AND createdAt BETWEEN #{startDate} AND #{endDate}
        AND status = 1
    </select>
</mapper> 