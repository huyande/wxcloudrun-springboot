<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tencent.wxcloudrun.dao.MemberRulesMapper">

    <resultMap id="memberRulesMapper" type="com.tencent.wxcloudrun.model.MemberRules">
        <id property="id" column="id"/>
        <result property="mid" column="mid"/>
        <result property="name" column="name"/>
        <result property="type" column="type"/>
        <result property="icon" column="icon"/>
        <result property="iconType" column="iconType"/>
        <result property="weeks" column="weeks"/>
        <result property="content" column="content"/>
        <result property="sort" column="sort"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="createdAt" javaType="java.time.LocalDateTime" />
        <result property="updatedAt" column="updatedAt" javaType="java.time.LocalDateTime"  />
    </resultMap>

    <select id="getRulesByMid" resultMap="memberRulesMapper" parameterType="java.lang.Integer">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`,`status`, `createdAt`,`updatedAt`
        FROM member_rules
        WHERE mid = #{mId} ORDER BY sort DESC
    </select>

    <select id="getRuleByNameAndMid" resultMap="memberRulesMapper" parameterType="java.util.Map">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`,`status`, `createdAt`,`updatedAt`
        FROM member_rules
        WHERE name = #{name} AND mid = #{mid} limit 1
    </select>

    <select id="getRuleByNameAndMids" resultMap="memberRulesMapper" parameterType="java.util.Map">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`, `status`,`createdAt`,`updatedAt`
        FROM member_rules
        WHERE name = #{name} AND mid = #{mid} and status=1
    </select>

    <select id="getRuleById" resultMap="memberRulesMapper" parameterType="java.lang.Integer">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`,`status`, `createdAt`,`updatedAt`
        FROM member_rules
        WHERE id = #{id}
    </select>

    <select id="getActiveRulesByMid" resultMap="memberRulesMapper" parameterType="java.lang.Integer">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`,`status`, `createdAt`,`updatedAt`
        FROM member_rules
        WHERE mid = #{mId} AND status = 1
        ORDER BY sort DESC
    </select>
    
    <select id="getLastSortByTypeAndMid" resultMap="memberRulesMapper" parameterType="java.util.Map">
        SELECT `id`, `mid`, `name`, `type`, `icon`, `iconType`,`weeks`,`content`,`sort`,`status`, `createdAt`,`updatedAt`
        FROM member_rules
        WHERE mid = #{mId} AND status = 1 and type=#{type}
        ORDER BY sort DESC limit 1
    </select>

    <update id="delete" parameterType="java.lang.Integer">
        UPDATE member_rules
        SET status = 0
        WHERE id = #{id}
    </update>

    <insert id="insertOne"  useGeneratedKeys="true" keyProperty="id" parameterType="com.tencent.wxcloudrun.model.MemberRules">
        INSERT INTO `member_rules`(`name`,`type`,`mid`,`icon`,`iconType`,`weeks`,`sort`) VALUE(#{name}, #{type}, #{mid}, #{icon}, #{iconType}, #{weeks},#{sort})
    </insert>

    <update id="swapRuleSort">
        UPDATE member_rules 
        SET sort = CASE 
            WHEN id = #{currentId} THEN #{targetSort}
            WHEN id = #{targetId} THEN #{currentSort}
        END
        WHERE id IN (#{currentId}, #{targetId})
    </update>

    <update id="updateRuleById" parameterType="com.tencent.wxcloudrun.model.MemberRules">
        UPDATE member_rules
        SET name = #{name}, type = #{type}, icon = #{icon}, iconType = #{iconType}, weeks = #{weeks}, sort = #{sort},status = #{status}
        WHERE id = #{id}
    </update>
</mapper>
